import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Loader2, FileText, Download, Copy, CheckCircle } from "lucide-react";

export default function ContentCreationAgent() {
  const [topic, setTopic] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedContent, setGeneratedContent] = useState<string | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [generationProgress, setGenerationProgress] = useState(0);
  const [currentStep, setCurrentStep] = useState("");

  const generateContent = async () => {
    if (!topic.trim()) {
      setError("Please enter a topic");
      return;
    }

    setIsGenerating(true);
    setError(null);
    setGeneratedContent(null);
    setGenerationProgress(0);

    const steps = [
      "Analyzing topic requirements...",
      "Researching healthcare content guidelines...",
      "Generating HIPAA-compliant content...",
      "Optimizing for healthcare marketing...",
      "Content generation complete!"
    ];

    try {
      // Simulate progress
      for (let i = 0; i < steps.length; i++) {
        setCurrentStep(steps[i]);
        setGenerationProgress((i + 1) * 20);
        await new Promise(resolve => setTimeout(resolve, 1000));
      }

      // Generate mock content
      const mockContent = `# ${topic} - Healthcare Content

## Introduction
This comprehensive guide covers everything you need to know about ${topic} in the healthcare industry. Our expert team has compiled the latest research and best practices to help you understand this important topic.

## Key Points
- **Patient Safety**: Ensuring the highest standards of care and safety
- **Evidence-Based Practice**: Following the latest medical research and guidelines
- **Quality Assurance**: Maintaining excellence in healthcare delivery
- **Compliance**: Meeting all regulatory requirements and standards

## Healthcare Marketing Insights
When marketing ${topic} services, it's important to:
1. Focus on patient outcomes and benefits
2. Use clear, accessible language
3. Highlight your expertise and credentials
4. Include testimonials and case studies
5. Ensure HIPAA compliance in all communications

## Next Steps
Contact our healthcare marketing team to learn more about how we can help you effectively market your ${topic} services.

---
*This content was generated by our AI Content Creation Agent and is designed for healthcare marketing purposes.*`;

      setGeneratedContent(mockContent);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Failed to generate content');
    } finally {
      setIsGenerating(false);
    }
  };

  const copyToClipboard = () => {
    if (generatedContent) {
      navigator.clipboard.writeText(generatedContent);
    }
  };

  const downloadContent = () => {
    if (generatedContent) {
      const blob = new Blob([generatedContent], { type: 'text/markdown' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${topic.replace(/\s+/g, '-').toLowerCase()}-content.md`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }
  };

  return (
    <div 
      className="min-h-screen bg-scheme-1-bg"
      style={{
        backgroundImage: "linear-gradient(0deg, rgba(0, 0, 0, 0.50), rgba(0, 0, 0, 0.50)), url('/img/bg1.png')",
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        backgroundRepeat: 'no-repeat',
        backgroundAttachment: 'fixed'
      }}
    >
      <div className="max-w-7xl mx-auto px-4 md:px-8 lg:px-16 py-16 md:py-20 lg:py-28">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="w-20 h-20 bg-scheme-5-bg rounded-full flex items-center justify-center mx-auto mb-6">
            <FileText className="w-10 h-10 text-white" />
          </div>
          <h1 className="text-4xl md:text-6xl font-alata font-normal text-white mb-4">
            Content Creation Agent
          </h1>
          <p className="text-lg text-white/90 max-w-2xl mx-auto">
            Generate HIPAA-compliant healthcare content for marketing, patient education, and digital campaigns.
          </p>
        </div>

        {/* Input Section */}
        <Card className="mb-8 bg-white/20 backdrop-blur-sm border-white/30">
          <CardHeader>
            <CardTitle className="text-white">Content Generation</CardTitle>
            <CardDescription className="text-white/80">
              Enter a topic to generate healthcare marketing content that's compliant and engaging.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-6">
              {/* Topic Input */}
              <div className="flex gap-4">
                <Input
                  value={topic}
                  onChange={(e) => setTopic(e.target.value)}
                  placeholder="Enter content topic (e.g., 'spine surgery recovery')"
                  className="flex-1"
                  onKeyPress={(e) => e.key === 'Enter' && !isGenerating && generateContent()}
                />
                <Button 
                  onClick={generateContent} 
                  disabled={isGenerating || !topic.trim()}
                  className="px-8"
                >
                  {isGenerating ? (
                    <>
                      <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                      Generating...
                    </>
                  ) : (
                    <>
                      <FileText className="w-4 h-4 mr-2" />
                      Generate Content
                    </>
                  )}
                </Button>
              </div>
              
              {/* Progress Section */}
              {isGenerating && (
                <div className="space-y-3">
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-white font-medium">{currentStep}</span>
                    <span className="text-white/60">{generationProgress}%</span>
                  </div>
                  <Progress value={generationProgress} className="h-2" />
                </div>
              )}

              {error && (
                <div className="text-red-200 text-sm bg-red-900/20 p-3 rounded-md">
                  {error}
                </div>
              )}
            </div>
          </CardContent>
        </Card>

        {/* Generated Content */}
        {generatedContent && (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <h2 className="text-2xl font-alata text-white">Generated Content</h2>
              <div className="flex gap-2">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={copyToClipboard}
                  className="text-white border-white/30 hover:bg-white/10"
                >
                  <Copy className="w-4 h-4 mr-2" />
                  Copy
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={downloadContent}
                  className="text-white border-white/30 hover:bg-white/10"
                >
                  <Download className="w-4 h-4 mr-2" />
                  Download
                </Button>
              </div>
            </div>
            
            <Card className="bg-white/20 backdrop-blur-sm border-white/30">
              <CardContent className="p-6">
                <pre className="text-white/90 text-sm whitespace-pre-wrap font-mono leading-relaxed">
                  {generatedContent}
                </pre>
              </CardContent>
            </Card>
          </div>
        )}

        {/* Success Message */}
        {currentStep === "Content generation complete!" && (
          <Card className="mt-8 border-green-200/50 bg-green-50/20 backdrop-blur-sm">
            <CardContent className="pt-6">
              <div className="flex items-center gap-3">
                <CheckCircle className="w-6 h-6 text-green-600" />
                <div>
                  <h3 className="font-semibold text-green-800">Content Generated Successfully!</h3>
                  <p className="text-sm text-green-700">Your healthcare content is ready for use in marketing campaigns.</p>
                </div>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
}